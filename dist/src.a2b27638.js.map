{"version":3,"sources":["src/index.js"],"names":["formatDate","date","hours","getHours","minutes","getMinutes","dayIndex","getDay","days","day","displayWeatherCondition","response","document","querySelector","innerHTML","data","name","Math","round","main","temp","humidity","wind","speed","weather","searchCity","city","apiKey","apiUrl","axios","get","then","citySubmit","event","preventDefault","value","searchLocation","position","latitude","coords","longitude","getLocalCity","navigator","geolocation","getCurrentPosition","dateElement","currentTime","Date","searchForm","addEventListener","currentLocationButton"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["function formatDate(date) {\n  let hours = date.getHours();\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n  let minutes = date.getMinutes();\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  let dayIndex = date.getDay();\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tueday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n  let day = days[dayIndex];\n\n  return `${day} ${hours}:${minutes}`;\n}\n\nfunction displayWeatherCondition(response) {\n  document.querySelector(\"#city\").innerHTML = response.data.name;\n  document.querySelector(\"#degree\").innerHTML = Math.round(\n    response.data.main.temp\n  );\n\n  document.querySelector(\"#humidity\").innerHTML = response.data.main.humidity;\n  document.querySelector(\"#wind\").innerHTML = Math.round(\n    response.data.wind.speed\n  );\n  document.querySelector(\"#description\").innerHTML =\n    response.data.weather[0].main;\n}\n\nfunction searchCity(city) {\n  let apiKey = \"20394866e976098bce3484adcbcc94b5\";\n  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n  axios.get(apiUrl).then(displayWeatherCondition);\n}\nfunction citySubmit(event) {\n  event.preventDefault();\n  let city = document.querySelector(\"#city-input\").value;\n  searchCity(city);\n}\n\nfunction searchLocation(position) {\n  let latitude = position.coords.latitude;\n  let longitude = position.coords.longitude;\n  let apiKey = \"20394866e976098bce3484adcbcc94b5\";\n  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n  axios.get(apiUrl).then(displayWeatherCondition);\n}\n\nfunction getLocalCity(event) {\n  event.preventDefault();\n  navigator.geolocation.getCurrentPosition(searchLocation);\n}\n\nlet dateElement = document.querySelector(\"#date\");\nlet currentTime = new Date();\ndateElement.innerHTML = formatDate(currentTime);\n\nlet searchForm = document.querySelector(\"#search-form\");\nsearchForm.addEventListener(\"submit\", citySubmit);\n\nlet currentLocationButton = document.querySelector(\"#current-location-button\");\ncurrentLocationButton.addEventListener(\"click\", getLocalCity);\n\nsearchCity(\"New York\");\n"]}